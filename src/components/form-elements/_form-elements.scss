$selectBackground: $grayAltLight;
$selectTextColor: $grayAlt;
$selectFontSize: fontSize(obscure);
$selectHeight: rhythm(2);
$selectHoverBackground: $graySecondary;
$selectInvalidBorderColor: $peachSecondary;

$inputHeight: rhythm(2);
$inputLowHeight: rhythm(1.5);
$inputLargeHeight: rhythm(2.667);
$inputBackground: $white;
$inputBorderColor: $graySecondary;
$inputTextColor: $black;
$inputFontSize: fontSize(medium);
$inputLargeFontSize: fontSize(standout);
$inputLargePlaceholderFontSize: fontSize(medium);
$inputFocusBorderColor: $grayPrimary;
$inputPlaceholderTextColor: $grayPrimary;
$inputPlaceholderFontSize: fontSize(obscure);
$inputLargePlaceholderFontSize: fontSize(medium);
$inputValidBorderColor: $mintSecondary;
$inputFocusValidBorderColor: $mintPrimary;
$inputInvalidBorderColor: $peachSecondary;
$inputFocusInvalidBorderColor: $peachPrimary;
$inputTransparentBorderColor: rgba($graySecondary, 0.7);
$inputTransparentFocusBorderColor: rgba($grayPrimary, 0.7);

$crInputSize: fontSize(default);
$crInputFontSize: fontSize(default);
$crInputColor: $white;
$crInputBorderColor: $graySecondary;
$crInputHoverBorderColor: $blueSecondaryLight;
$crInputActiveBorderColor: $bluePrimary;
$crInputCheckedColor: $bluePrimary;

$crInputLabelFontSize: fontSize(obscure);
$crInputLabelLineHeight: rhythm(0.933);
$crInputLabelHeight: rhythm(0.666);
$crInputLabelColor: $grayPrimary;
$crInputActiveColor: rgba($crInputColor, 0.7);

$textareaBackground: $white;
$textareaBorderColor: $graySecondary;
$textareaBorderRadius: 11px;
$textareaFontSize: fontSize(default);
$textareaLineHeight: rhythm(0.792);
$textareaTextColor: $black;
$textareaPadding: 11px;
$textareaSmallPadding: 6px;
$textareaFocusBorderColor: $grayPrimary;
$textareaPlaceholderTextColor: $grayPrimary;
$textareaPlaceholderFontSize: fontSize(obscure);
$textareaValidBorderColor: $mintSecondary;
$textareaInvalidBorderColor: $peachSecondary;

$includeHtml: false !default;

@if ($includeHtml) {

  .mint-select {
    // scss-lint:disable PlaceholderInExtend
    @extend .mint-icon-arrow_down;
    // scss-lint:enalbe PlaceholderInExtend
    @include component;

    border-radius: $selectHeight / 2;
    font-size: $selectFontSize;
    color: $selectTextColor;
    height: $selectHeight;
    border: 2px solid $selectBackground;

    &__element {
      @include uppercaseText;
      background: $selectBackground;
      border: none;
      font-size: inherit;
      font-weight: bold;
      color: inherit;
      display: inline-block;
      height: $selectHeight;
      position: relative;
      padding: 0 ($selectHeight / 2 + rhythm(0.667)) 0 ($selectHeight / 2);
      outline: 0;
      appearance: none;
      width: 100%;

      &::-ms-expand {
        display: none;
      }

      &:hover,
      &:focus,
      &:active {
        background: $selectHoverBackground;
      }
    }

    &:before {
      $iconSize: $selectFontSize + $iconBoostValue;
      font-size: $iconSize;
      font-weight: bold;
      position: absolute;
      right: $selectHeight / 2 - $iconSize / 2;
      top: 50%;
      pointer-events: none;
      z-index: 1;
      margin-top: 1px;
      transform: translateY(-50%);
    }

    &--small {
      height: gutter(1.333);

      &:before {
        right: gutter(0.333);
        margin-top: 0;
      }

      .mint-select__element {
        height: gutter(1.333);
        padding: 0 gutter(1.333) 0 gutter(0.667);
      }
    }

    &--full {
      width: 100%;
    }

    &--invalid {
      border: 2px solid $selectInvalidBorderColor;

      .mint-select__element {
        padding: 0 ($selectHeight / 2) rhythm(0.5) 0 ($selectHeight / 2 - rhythm(0.083));
      }
    }
  }

  .mint-input {
    @include component;
    background: $inputBackground;
    border: 2px solid $inputBorderColor;
    border-radius: $inputHeight / 2;
    color: $inputTextColor;
    font-size: $inputFontSize;
    padding: 0 $inputHeight / 2;
    height: $inputHeight;
    appearance: none;
    transition: border 300ms;

    &:focus {
      outline: none;
      border-color: $inputFocusBorderColor;
    }

    &::placeholder {
      @include uppercaseText;
      color: $inputPlaceholderTextColor;
      font-size: $inputPlaceholderFontSize;
      font-weight: bold;
      position: relative;
      top: rhythm(0.083);
    }

    &--low {
      border-radius: $inputLowHeight / 2;
      padding: 0 $inputLowHeight / 2;
      height: $inputLowHeight;
      line-height: $inputLowHeight;
    }

    &--valid {
      border-color: $inputValidBorderColor;

      &:focus {
        border-color: $inputFocusValidBorderColor;
      }
    }

    &--invalid {
      border-color: $inputInvalidBorderColor;

      &:focus {
        border-color: $inputFocusInvalidBorderColor;
      }
    }

    &--spaced {
      margin-bottom: $inputHeight / 4;
    }

    &--full {
      width: 100%;
    }

    &--large {
      @include mintBreakpoint(medium-up) {
        height: $inputLargeHeight;
        font-size: $inputLargeFontSize;
        border-radius: $inputLargeHeight / 2;
        padding: 0 $inputLargeHeight / 2;

        &::placeholder {
          font-size: $inputLargePlaceholderFontSize;
        }
      }
    }

    &--subtle-border {
      border: none;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
      transition: box-shadow 300ms;

      &:focus {
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);
      }
    }

    &--transparent-border {
      border-color: $inputTransparentBorderColor;
      background-clip: padding-box;

      &:focus {
        border-color: $inputTransparentFocusBorderColor;
      }
    }

    &--with-icon {
      padding-right: 46px;
    }

    &--with-small-icon {
      padding-right: 36px;
    }
  }

  .mint-checkbox,
  .mint-radio {
    @include component;
    overflow: visible;
    width: $crInputSize;
    height: $crInputSize;
    min-height: $crInputSize;
    font-size: $crInputFontSize;

    &__element {
      opacity: 0;
      position: absolute;
      margin: 0;
      width: 100%;
      height: 100%;
      z-index: 1;
    }

    &__element:active + &__ghost {
      border-color: $crInputActiveBorderColor;
    }

    &__element:checked + &__ghost {
      border-color: $crInputCheckedColor;
      background: $crInputCheckedColor;
    }

    &__ghost {
      background: $crInputColor;
      width: 100%;
      height: 100%;
      border: 2px solid $crInputBorderColor;
      display: inline-block;
    }
  }

  .mint-checkbox-label,
  .mint-radio-label {
    @include component;
    overflow: visible;
    font-weight: bold;
    font-size: $crInputLabelFontSize;
    line-height: $crInputLabelLineHeight;
    height: $crInputLabelHeight;
    color: $crInputLabelColor;
    margin: 0 0 0 5px;
    padding: 0;
    vertical-align: top;

    &--upper {
      @include uppercaseText;
    }
  }

  .mint-checkbox__element:checked:active + .mint-checkbox__ghost:before {
    color: $crInputActiveColor;
  }

  .mint-checkbox__ghost {
    // scss-lint:disable PlaceholderInExtend
    @extend .mint-icon-check;
    // scss-lint:enable PlaceholderInExtend
    border-radius: 25%;

    &:before {
      font-size: 1.375rem;
      position: absolute;
      left: -18%;
      top: -8%;
      color: $crInputColor;
    }
  }

  .mint-radio__ghost {
    border-radius: 50%;

    &:before {
      content: '';
      position: absolute;
      border-radius: 100%;
      background-color: $crInputColor;
      width: 50%;
      height: 50%;
      top: 35%;
      left: 25%;
    }
  }

  .mint-textarea {
    @include component;
    background: $textareaBackground;
    border: 2px solid $textareaBorderColor;
    border-radius: $textareaBorderRadius;
    color: $textareaTextColor;
    font-size: $textareaFontSize;
    line-height: $textareaLineHeight;
    padding: $textareaPadding;
    resize: none;
    height: 100px;
    overflow-y: auto;
    appearance: none;
    position: relative;

    &:focus {
      border-color: $textareaFocusBorderColor;
      outline: 0;
    }

    &::placeholder {
      @include uppercaseText;
      position: relative;
      top: rhythm(0.125);
      color: $textareaPlaceholderTextColor;
      font-size: $textareaPlaceholderFontSize;
      font-weight: bold;
    }

    &--full {
      width: 100%;
    }

    &--valid {
      border-color: $textareaValidBorderColor;

      &:focus {
        border-color: $textareaValidBorderColor;
      }
    }

    &--invalid {
      border-color: $textareaInvalidBorderColor;

      &:focus {
        border-color: $textareaInvalidBorderColor;
      }
    }

    &--small {
      height: 36px;
      padding: $textareaSmallPadding $textareaPadding;
    }

    &--big {
      height: 178px;
    }
  }

}
